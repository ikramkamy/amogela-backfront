 {
        /*<MyContext.Provider
          value={{
            isMenuOpen: menuOpenState,
            toggleMenu: () => setMenuOpenState(!menuOpenState),
            stateChangeHandler: (newState) => setMenuOpenState(newState.isOpen),
          }}
        >
          {props.children}
        </MyContext.Provider>
        <Menu
          onStateChange={handleStateChange}
          className="burger-menu"
          customBurgerIcon={<FaBars className="FaBars" onClick={Handelopne} />}
        >
         
          <a id="home" className="menu-item" href="/">
            Home
          </a>
          <a id="about" className="menu-item" href="/about">
            About
          </a>
          <a id="contact" className="menu-item" href="/contact">
            Contact
          </a>
          <a className="menu-item--small" href="">
            Settings
          </a>
        </Menu>
        */}

        /******************************cliquer et retirez background*************////
         <div
        className="product-backg-container"
        style={{ backgroundImage: "url(/images/5.jpg)" }}
      >
        <div className="sevice-name">
          Clickez & Retirez
          <h3>Amogela</h3>
        </div>
      </div>


      const [scroll,setScroll]=useState(false);
useEffect(() => {
  window.onscroll = () => {
while(window.innerHeight >70){

  setScroll(true)
}
    

    console.log("window.pageYOffset",window.innerHeight);
    console.log("scroll",scroll);
    
  }
}, []);